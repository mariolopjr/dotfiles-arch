# Autostart
exec foot --server
exec udiskie
exec mako --font='NotoSans Nerd Font 14' --background-color='#3b4252' --text-color='#eceff4' --width=350 \
  margin='0,20,20' padding=10 border-size=2 border-color='#4c566a' border-radius=5 default-timeout=10000 group-by='summary'

# Style
font pango: NotoSans Nerd Font 16px
default_border pixel 2
titlebar_border_thickness 2
gaps outer 5
gaps inner 5

## Window decoration
# class                 border  backgr. text    indicator child_border
client.focused          #88c0d0 #434c5e #eceff4 #8fbcbb   #88c0d0
client.focused_inactive #88c0d0 #2e3440 #d8dee9 #4c566a   #4c566a
client.unfocused        #88c0d0 #2e3440 #d8dee9 #4c566a   #4c566a
client.urgent           #ebcb8b #ebcb8b #2e3440 #8fbcbb   #ebcb8b

### Variables
# Logo key. Use Mod1 for Alt.
set $mod Mod4

set $left h
set $down j
set $up k
set $right l

set $term foot

# Application Launcher
set $menu wofi --show drun -f -i

## Output configuration
output * bg ~/.local/wallpapers/monolith.jpg fill

# Behavior
focus_follows_mouse yes

### Idle configuration
exec swayidle -w \
    timeout 600 'swaylock -f -c 2E3440' \
    timeout 1800 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' \
    before-sleep 'swaylock -f -c 2E3440'

### Key bindings
#
# Start a terminal
bindsym $mod+Return exec $term

# Kill focused window
bindsym $mod+Shift+q kill

# Start your launcher
bindsym $mod+Space exec $menu

# Drag floating windows by holding down $mod and left mouse button.
# Resize them with right mouse button + $mod.
# Despite the name, also works for non-floating windows.
# Change normal to inverse to use left mouse button for resizing and right
# mouse button for dragging.
floating_modifier $mod normal

# Reload the configuration file
bindsym $mod+Shift+c reload

# Swaynag
swaynag_command swaynagmode
set $nag exec swaynagmode
mode "nag" {
  bindsym {
    Ctrl+d    mode "default"

    Ctrl+c    $nag --exit
    q         $nag --exit
    Escape    $nag --exit

    Return    $nag --confirm

    Tab       $nag --select prev
    Shift+Tab $nag --select next

    Left      $nag --select next
    Right     $nag --select prev

    Up        $nag --select next
    Down      $nag --select prev
  }
}

# Exit sway
# bindsym $mod+Shift+e $nag -t custom -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Logoff' 'swaymsg exit'

# Exit sway (logs you out of your Wayland session)
bindsym --to-code $mod+Delete $nag -t custom -m \
  'You pressed the exit shortcut. What do you want?' \
  -b 'Sleep' 'systemctl suspend' \
  -b 'Logout' 'swaymsg exit' \
  -b 'Reboot' 'systemctl reboot' \
  -b 'Poweroff' 'systemctl poweroff'

# Shutdown/Logout menu
set $mode_system System (l) lock, (e) exit, (s) suspend, (r) reboot, (Shift+s) Shutdown
mode "$mode_system" {
    # bindsym l exec $locker, mode "default"
    bindsym e exec swaymsg exit, mode "default"
    # bindsym s exec $locker && systemctl suspend, mode "default"
    bindsym r exec systemctl reboot, mode "default"
    bindsym Shift+s exec systemctl poweroff -i, mode "default"

    # back to normal: Enter or Escape
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

bindsym $mod+Shift+e mode "$mode_system"

#
# Moving around:
#
# Move your focus around
bindsym $mod+$left focus left
bindsym $mod+$down focus down
bindsym $mod+$up focus up
bindsym $mod+$right focus right

# Or use $mod+[up|down|left|right]
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# Move the focused window with the same, but add Shift
bindsym $mod+Shift+$left move left
bindsym $mod+Shift+$down move down
bindsym $mod+Shift+$up move up
bindsym $mod+Shift+$right move right

# Ditto, with arrow keys
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right
#
# Workspaces:
#
# Switch to workspace
bindsym $mod+1 workspace number 1
bindsym $mod+2 workspace number 2
bindsym $mod+3 workspace number 3
bindsym $mod+4 workspace number 4
bindsym $mod+5 workspace number 5
bindsym $mod+6 workspace number 6
bindsym $mod+7 workspace number 7
bindsym $mod+8 workspace number 8
bindsym $mod+9 workspace number 9
bindsym $mod+0 workspace number 10

# Move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number 1
bindsym $mod+Shift+2 move container to workspace number 2
bindsym $mod+Shift+3 move container to workspace number 3
bindsym $mod+Shift+4 move container to workspace number 4
bindsym $mod+Shift+5 move container to workspace number 5
bindsym $mod+Shift+6 move container to workspace number 6
bindsym $mod+Shift+7 move container to workspace number 7
bindsym $mod+Shift+8 move container to workspace number 8
bindsym $mod+Shift+9 move container to workspace number 9
bindsym $mod+Shift+0 move container to workspace number 10

# Note: workspaces can have any name you want, not just numbers.
# We just use 1-10 as the default.
#
# Layout stuff:
#
# You can "split" the current object of your focus with
# $mod+b or $mod+v, for horizontal and vertical splits
# respectively.
bindsym $mod+b splith
bindsym $mod+v splitv

# Switch the current container between different layout styles
# bindsym $mod+s layout stacking
bindsym $mod+m layout tabbed
bindsym $mod+t layout toggle split

# Make the current focus fullscreen
bindsym $mod+f fullscreen

# Toggle floating and between floating and other windows
bindsym $mod+s floating toggle
bindsym $mod+Shift+s focus mode_toggle

# Move focus to the parent container
bindsym $mod+a focus parent
# Move focus to the child container
bindsym $mod+Shift+a focus child

#
# Scratchpad:
#
# Sway has a "scratchpad", which is a bag of holding for windows.
# You can send windows there and get them back later.

# Move the currently focused window to the scratchpad
bindsym $mod+Shift+minus move scratchpad

# Show the next scratchpad window or hide the focused scratchpad window.
# If there are multiple scratchpad windows, this command cycles through them.
bindsym $mod+minus scratchpad show

#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
# bar {
#     position top

#     # When the status_command prints a new line to stdout, swaybar updates.
#     # The default just shows the current date and time.
#     status_command while date +'%Y-%m-%d %I:%M:%S %p'; do sleep 1; done

#     colors {
#         statusline #ffffff
#         background #323232
#         inactive_workspace #32323200 #32323200 #5c5c5c
#     }
# }

# Status Bar:
bar {
    swaybar_command waybar
    }
}

include /etc/sway/config.d/*
